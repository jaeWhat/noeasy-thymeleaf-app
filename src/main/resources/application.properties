spring.application.name=noeasy
# ------------------------------
# 업비트 주문 여부 설정
# true: 거래 가능
# false: 거래 불가능
# ------------------------------
#upbit.order-flag=true
#upbit.order-flag=false

# ------------------------------
# 서버 설정
# ------------------------------
# 서버 포트 설정
server.port=8080

# 서버 문자 인코딩
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

spring.main.banner-mode=off
spring.web.resources.static-locations=classpath:/static/

# ------------------------------
# Log 설정
# ------------------------------
# 전체 로그 레벨
logging.level.root=INFO

# 특정 패키지/모듈 레벨 설정
logging.level.com.noeasy.app=INFO
logging.level.com.noeasy.app.mapper=INFO

# Spring 내부 로그 디버깅
logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.transaction=DEBUG

# MyBatis 로그
logging.level.org.apache.ibatis=INFO

# 콘솔 로그 포맷 지정
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# 로그 파일 경로 및 이름
logging.file.name=logs/noeasy-api.log

# 로그 파일 크기 및 회전 설정
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30

# ------------------------------
# PostgreSQL 데이터소스 설정
# ------------------------------
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/noeasy
spring.datasource.username=admin
spring.datasource.password=1234

# ------------------------------
# Quartz 스케줄러 설정
# ------------------------------
# Quartz 설정 - JDBC 기반으로 변경
spring.quartz.job-store-type=jdbc
# Quartz 스키마 자동 생성은 안 함 (always: 항상, never: 직접 DB에 스키마 생성해야 함)
spring.quartz.jdbc.initialize-schema=always
# Quartz 프로퍼티 추가 - PostgreSQLDelegate 지정 및 클러스터링 활성화
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
# (선택) 스케줄러 이름 지정
spring.quartz.properties.org.quartz.scheduler.instanceName=QuartzScheduler
spring.quartz.properties.org.quartz.jobStore.misfireThreshold=60000

# 사용 여부
job.tickerJob.enabled=false
job.strategyJob.enabled=false

# ------------------------------
# 세션 설정
# ------------------------------
# 세션 저장소 설정
#spring.session.store-type=jdbc

# 세션 테이블 생성
#spring.session.jdbc.initialize-schema=always

# 세션 타임아웃 (초 단위, 30분)
#spring.session.timeout=PT30M
#spring.session.timeout=PT2H30M
#spring.session.timeout=PT45S
#spring.session.timeout=PT24H
#spring.session.timeout=PT1H

#spring.session.store-type=redis
#spring.session.redis.namespace=spring:session

# ------------------------------
# Redis 설정
# ------------------------------
spring.data.redis.host=localhost
spring.data.redis.port=6379

# ------------------------------
# HikariCP 설정 최적화
# ------------------------------
#logging.level.com.zaxxer.hikari=DEBUG
# Autocommit mode
spring.datasource.hikari.auto-commit=true
# 최대 커넥션 수
spring.datasource.hikari.maximum-pool-size=20
# 최소 유휴 커넥션 수
spring.datasource.hikari.minimum-idle=5
# 유휴 커넥션 타임아웃 (30초)
spring.datasource.hikari.idle-timeout=30000
# 커넥션 최대 수명 (30분)
spring.datasource.hikari.max-lifetime=1800000
# 커넥션 유지 시간 (60초)
spring.datasource.hikari.keepalive-time=60000
# 연결 타임아웃 (30초)
spring.datasource.hikari.connection-timeout=30000

# ------------------------------
# JPA 설정
# ------------------------------
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.default_schema=public

# ------------------------------
# Thymeleaf 설정
# ------------------------------
# Thymeleaf 템플릿 파일의 캐싱 여부 (개발 시 false, 운영 시 true 권장)
spring.thymeleaf.cache=false
# Thymeleaf 템플릿 파일의 경로 (기본값: classpath:/templates/)
spring.thymeleaf.prefix=classpath:/templates/
# Thymeleaf 템플릿 파일의 확장자 (기본값: .html)
spring.thymeleaf.suffix=.html
# Thymeleaf 템플릿 인코딩 설정
spring.thymeleaf.encoding=UTF-8
# Thymeleaf 동작 모드 (HTML, XML, TEXT, JAVASCRIPT, CSS, RAW)
spring.thymeleaf.mode=HTML
# Thymeleaf 템플릿 파일 검증 여부
spring.thymeleaf.check-template-location=true

# ------------------------------
# 에러 디스플레이 설정
# ------------------------------
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=ON_PARAM
server.error.include-exception=true